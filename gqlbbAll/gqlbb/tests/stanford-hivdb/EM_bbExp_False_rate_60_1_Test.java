import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.evomaster.client.java.controller.db.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import  java.util.List;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2021-09-24T23:43:33.358+02:00[Europe/Berlin]
 * <br>
 * The generated test suite contains 14 tests
 * <br>
 * Covered targets: 42
 * <br>
 * Used time: 0h 16m 45s
 * <br>
 * Needed budget for current results: 85%
 * <br>
 * 
 */
public class EM_bbExp_False_rate_60_1_Test {

    
    private static String baseUrlOfSut = "https://hivdb.stanford.edu/graphql";
    
    
    @BeforeClass
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    @Test
    public void test_0() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  currentProgramVersion  {publishDate}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'currentProgramVersion'.'publishDate'", containsString("2021-03-21"));
    }
    
    
    @Test
    public void test_1() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  mutationPrevalenceSubtypes  {name}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'mutationPrevalenceSubtypes'.size()", equalTo(8))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'name'", containsString("A"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'name'", containsString("B"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'name'", containsString("C"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'name'", containsString("D"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'name'", containsString("F"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'name'", containsString("G"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'name'", containsString("CRF01_AE"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'name'", containsString("CRF02_AG"));
    }
    
    
    @Test
    public void test_2() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  currentVersion  {text}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'currentVersion'.'text'", containsString("HIVDB_9.0"));
    }
    
    
    @Test
    public void test_3() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { patternAnalysis  (patternNames : [\\\"BXCIOOVZ\\\"],patternNames : [\\\"CM8\\\", \\\"WGtPg9__IHWOBqt\\\", \\\"A6g26LBMCHcu7\\\"])  {name,drugResistance{algorithm{text,family,version}},mutationPrevalences{boundMutation{gene{strain{name},reference,consensus,drugClasses{name}},displayAAChars,insertedNAs,isApobecMutation,isApobecDRM,hasStop,MutationType,comments{name,gene{nameWithStrain,strain{name},reference,consensus,length,drugClasses{drugs{name,displayAbbr,fullName}}},drugClass{drugs{name},gene{nameWithStrain,name,consensus,MutationType}}}},others{AA,subtypes{totalNaive,percentageTreated}}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(2))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Mutation' is undefined @ 'patternAnalysis/mutationPrevalences/boundMutation/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(320.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'patternAnalysis/mutationPrevalences/boundMutation/comments/drugClass/gene/MutationType'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(511.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  currentProgramVersion  {text}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'currentProgramVersion'.'text'", containsString("3.1.2"));
    }
    
    
    @Test
    public void test_4() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { genes  (names : [\\\"PR\\\", \\\"RT\\\"],names : [\\\"PR\\\", \\\"PR\\\"])  {name,strain{display},consensus,length,drugClasses{fullName,drugs{fullName}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(2))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type WrongType: argument 'names[0]' with value 'StringValue{value='PR'}' is not a valid 'EnumGene' @ 'genes'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(13.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type WrongType: argument 'names[0]' with value 'StringValue{value='PR'}' is not a valid 'EnumGene' @ 'genes'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(34.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { patternAnalysis  (patternNames : [\\\"nd7lVoS1tJwA\\\"],patternNames : [])  {validationResults{level,message},drugResistance{version{display,family,version,publishDate},algorithm{family,version,publishDate},gene{nameWithStrain,name,MutationType},drugScores{drug{displayAbbr,drugClass{gene{nameWithStrain,name,length,MutationType}}},SIR,score,text,partialScores{mutations{gene{nameWithStrain,name,strain{name,display},consensus,length,drugClasses{name}},consensus,AAs,displayAAChars,AAChars,triplet,isAmbiguous,isApobecMutation,isUnsequenced,isDRM,isUnusual,MutationType,primaryType,shortText},score}},mutationsByTypes{mutationType},commentsByTypes{mutationType,commentType,comments{gene{name,reference,consensus,length,MutationType},type,text,boundMutation{reference,position,displayAAs,triplet,isDeletion,isAmbiguous,isApobecMutation,isApobecDRM,isUnsequenced,isDRM,isUnusual,text,shortText},highlightText}}},mutationPrevalences{boundMutation{reference,AAs,displayAAChars,AAChars,insertedNAs,isInsertion,isIndel,isAmbiguous,isApobecMutation,isApobecDRM,isUnsequenced,isDRM,hasStop,primaryType,shortText}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(4))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'patternAnalysis/drugResistance/gene/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(231.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'patternAnalysis/drugResistance/drugScores/drug/drugClass/gene/MutationType'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(315.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[2].'type'", containsString("ValidationError"))
                .body("'errors'[2].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Mutation' is undefined @ 'patternAnalysis/drugResistance/drugScores/partialScores/mutations/MutationType'"))
                .body("'errors'[2].'locations'.size()", equalTo(1))
                .body("'errors'[2].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[2].'locations'[0].'column'", numberMatches(556.0))
                .body("'errors'[2].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[3].'type'", containsString("ValidationError"))
                .body("'errors'[3].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'patternAnalysis/drugResistance/commentsByTypes/comments/gene/MutationType'"))
                .body("'errors'[3].'locations'.size()", equalTo(1))
                .body("'errors'[3].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[3].'locations'[0].'column'", numberMatches(718.0))
                .body("'errors'[3].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { sequenceAnalysis  (sequences : [],sequences : [{header:\\\"DuAWjBFD\\\"}, {sequence:\\\"VK\\\", header:\\\"3MVu_VqKED2WcB9B\\\", sequence:\\\"XtWg4cy\\\"}, {header:\\\"XlcVtTN5oGuap\\\", sequence:\\\"TYWy\\\", header:\\\"7a\\\"}])  {strain{name,display},isReverseComplement,validationResults{level,message},bestMatchingSubtype{displayWithoutDistance,displaySubtypes{indexName,displayName},lastNA,referenceCountry},genotypes{displaySubtypes{indexName,displayName,classificationLevel}},mutations{consensus,position,AAs,isInsertion,isAmbiguous,isApobecMutation,isApobecDRM,hasStop,isUnusual,isSDRM,primaryType,comments{type,text},text},frameShifts{isInsertion,NAs},subtypeText}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'sequenceAnalysis'.size()", equalTo(2))
                .body("'data'.'sequenceAnalysis'[0].'strain'.'name'", containsString("HIV1"))
                .body("'data'.'sequenceAnalysis'[0].'strain'.'display'", containsString("HIV-1"))
                .body("'data'.'sequenceAnalysis'[0].'isReverseComplement'", equalTo(false))
                .body("'data'.'sequenceAnalysis'[0].'validationResults'.size()", equalTo(1))
                .body("'data'.'sequenceAnalysis'[0].'validationResults'[0].'level'", containsString("CRITICAL"))
                .body("'data'.'sequenceAnalysis'[0].'validationResults'[0].'message'", containsString("There were no Protease, Reverse Transcriptase, or Integrase genes found, refuse to process."))
                .body("'data'.'sequenceAnalysis'[0].'bestMatchingSubtype'", nullValue())
                .body("'data'.'sequenceAnalysis'[0].'genotypes'.size()", equalTo(0))
                .body("'data'.'sequenceAnalysis'[0].'mutations'.size()", equalTo(0))
                .body("'data'.'sequenceAnalysis'[0].'frameShifts'.size()", equalTo(0))
                .body("'data'.'sequenceAnalysis'[0].'subtypeText'", containsString("NA"))
                .body("'data'.'sequenceAnalysis'[1].'strain'.'name'", containsString("HIV1"))
                .body("'data'.'sequenceAnalysis'[1].'strain'.'display'", containsString("HIV-1"))
                .body("'data'.'sequenceAnalysis'[1].'isReverseComplement'", equalTo(false))
                .body("'data'.'sequenceAnalysis'[1].'validationResults'.size()", equalTo(1))
                .body("'data'.'sequenceAnalysis'[1].'validationResults'[0].'level'", containsString("CRITICAL"))
                .body("'data'.'sequenceAnalysis'[1].'validationResults'[0].'message'", containsString("There were no Protease, Reverse Transcriptase, or Integrase genes found, refuse to process."))
                .body("'data'.'sequenceAnalysis'[1].'bestMatchingSubtype'", nullValue())
                .body("'data'.'sequenceAnalysis'[1].'genotypes'.size()", equalTo(0))
                .body("'data'.'sequenceAnalysis'[1].'mutations'.size()", equalTo(0))
                .body("'data'.'sequenceAnalysis'[1].'frameShifts'.size()", equalTo(0))
                .body("'data'.'sequenceAnalysis'[1].'subtypeText'", containsString("NA"));
    }
    
    
    @Test
    public void test_5() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { mutationsAnalysis  (mutations : [\\\"j4xSNYOW\\\"],mutations : [])  {algorithmComparison{drugClass{drugs{name,displayAbbr}}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'mutationsAnalysis'.'algorithmComparison'.size()", equalTo(0));
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { patternAnalysis  (patternNames : [\\\"cFnm5fypQ5vrb9\\\", \\\"zWtg7uf\\\"],patternNames : [\\\"fNwKUQcUJpK\\\", \\\"eewB9iOUvlhzl\\\"])  {validationResults{level},mutationPrevalences{others{subtypes{subtype{name,stats{gene{refSequence,consensus,drugClasses{drugs{displayAbbr}},MutationType}}},totalNaive,percentageNaive,percentageTreated}}},algorithmComparison{drugScores{drug{fullName,drugClass{name}},interpretation,explanation}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'patternAnalysis/mutationPrevalences/others/subtypes/subtype/stats/gene/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(258.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { sequenceReadsAnalysis  (sequenceReads : [{strain:HIV1, minReadDepth:-1994922668, minReadDepth:426}, {name:\\\"sJ0fLh4\\\", strain:HIV1, minPrevalence:0.99499416, minReadDepth:400, strain:HIV1}, {name:\\\"yoBUGlAsgOYKXozL\\\", minCodonCount:536, minPrevalence:0.45380688}, {strain:HIV1, minPrevalence:0.68249923, strain:HIV1, minPrevalence:0.9458267, minCodonCount:740}],sequenceReads : [{name:\\\"S3RAGr\\\", minReadDepth:437, name:\\\"L8XboACWG\\\", minPrevalence:0.48571295, minReadDepth:197}])  {cutoffSuggestionStricterLimit,validationResults{level},minReadDepth,availableGenes{nameWithStrain,name,strain{name}},mixturePcnt,drugResistance{algorithm{text,display,version,publishDate},gene{nameWithStrain,reference,drugClasses{name,fullName},MutationType},drugScores{drugClass{name},SIR,level,text},mutationsByTypes{mutations{gene{nameWithStrain,name,reference,drugClasses{drugs{name,displayAbbr}},MutationType},position,displayAAs,isIndel,isAmbiguous,isApobecMutation,isDRM,hasStop,isUnusual}}},histogram{usualSites{percentStart,count},drmSites{percentStart,count},unusualSites{count},apobecDrmSites{percentStart},stopCodonSites{percentStart},numPositions},histogramByCodonCount{usualSites{count},drmSites{cutoff},unusualApobecSites{cutoff},apobecSites{cutoff},stopCodonSites{cutoff}},readDepthStats{standardDeviation,min,n,values},readDepthStatsDRP{standardDeviation,max},codonReadsCoverage{gene{name,strain{name,display},refSequence,reference,consensus,drugClasses{name},MutationType}},internalJsonCodonReadsCoverage}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(3))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'sequenceReadsAnalysis/drugResistance/gene/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(725.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'sequenceReadsAnalysis/drugResistance/mutationsByTypes/mutations/gene/MutationType'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(881.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[2].'type'", containsString("ValidationError"))
                .body("'errors'[2].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'sequenceReadsAnalysis/codonReadsCoverage/gene/MutationType'"))
                .body("'errors'[2].'locations'.size()", equalTo(1))
                .body("'errors'[2].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[2].'locations'[0].'column'", numberMatches(1457.0))
                .body("'errors'[2].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  mutationPrevalenceSubtypes  {stats{gene{name,strain{name},refSequence,consensus,length,drugClasses{fullName}},totalNaive,totalTreated}}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'mutationPrevalenceSubtypes'.size()", equalTo(8))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'.size()", equalTo(3))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[0].'gene'.'name'", containsString("PR"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[0].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[0].'gene'.'refSequence'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[0].'gene'.'consensus'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[0].'gene'.'length'", numberMatches(99.0))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[0].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[0].'gene'.'drugClasses'[0].'fullName'", containsString("Protease Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[0].'totalNaive'", numberMatches(9097.0))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[0].'totalTreated'", numberMatches(1633.0))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'gene'.'name'", containsString("RT"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'gene'.'refSequence'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'gene'.'consensus'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'gene'.'length'", numberMatches(560.0))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'gene'.'drugClasses'.size()", equalTo(2))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'gene'.'drugClasses'[0].'fullName'", containsString("Nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'gene'.'drugClasses'[1].'fullName'", containsString("Non-nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'totalNaive'", numberMatches(8427.0))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[1].'totalTreated'", numberMatches(8789.0))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[2].'gene'.'name'", containsString("IN"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[2].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[2].'gene'.'refSequence'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[2].'gene'.'consensus'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[2].'gene'.'length'", numberMatches(288.0))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[2].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[2].'gene'.'drugClasses'[0].'fullName'", containsString("Integrase Strand Transfer Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[2].'totalNaive'", numberMatches(2163.0))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'stats'[2].'totalTreated'", numberMatches(84.0))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'.size()", equalTo(3))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[0].'gene'.'name'", containsString("PR"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[0].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[0].'gene'.'refSequence'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[0].'gene'.'consensus'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[0].'gene'.'length'", numberMatches(99.0))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[0].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[0].'gene'.'drugClasses'[0].'fullName'", containsString("Protease Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[0].'totalNaive'", numberMatches(57316.0))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[0].'totalTreated'", numberMatches(21619.0))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'gene'.'name'", containsString("RT"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'gene'.'refSequence'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'gene'.'consensus'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'gene'.'length'", numberMatches(560.0))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'gene'.'drugClasses'.size()", equalTo(2))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'gene'.'drugClasses'[0].'fullName'", containsString("Nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'gene'.'drugClasses'[1].'fullName'", containsString("Non-nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'totalNaive'", numberMatches(52593.0))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[1].'totalTreated'", numberMatches(47014.0))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[2].'gene'.'name'", containsString("IN"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[2].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[2].'gene'.'refSequence'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[2].'gene'.'consensus'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[2].'gene'.'length'", numberMatches(288.0))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[2].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[2].'gene'.'drugClasses'[0].'fullName'", containsString("Integrase Strand Transfer Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[2].'totalNaive'", numberMatches(10295.0))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'stats'[2].'totalTreated'", numberMatches(1840.0))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'.size()", equalTo(3))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[0].'gene'.'name'", containsString("PR"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[0].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[0].'gene'.'refSequence'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[0].'gene'.'consensus'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[0].'gene'.'length'", numberMatches(99.0))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[0].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[0].'gene'.'drugClasses'[0].'fullName'", containsString("Protease Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[0].'totalNaive'", numberMatches(23886.0))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[0].'totalTreated'", numberMatches(3818.0))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'gene'.'name'", containsString("RT"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'gene'.'refSequence'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'gene'.'consensus'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'gene'.'length'", numberMatches(560.0))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'gene'.'drugClasses'.size()", equalTo(2))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'gene'.'drugClasses'[0].'fullName'", containsString("Nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'gene'.'drugClasses'[1].'fullName'", containsString("Non-nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'totalNaive'", numberMatches(17276.0))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[1].'totalTreated'", numberMatches(30688.0))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[2].'gene'.'name'", containsString("IN"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[2].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[2].'gene'.'refSequence'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[2].'gene'.'consensus'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[2].'gene'.'length'", numberMatches(288.0))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[2].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[2].'gene'.'drugClasses'[0].'fullName'", containsString("Integrase Strand Transfer Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[2].'totalNaive'", numberMatches(4427.0))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'stats'[2].'totalTreated'", numberMatches(82.0))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'.size()", equalTo(3))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[0].'gene'.'name'", containsString("PR"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[0].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[0].'gene'.'refSequence'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[0].'gene'.'consensus'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[0].'gene'.'length'", numberMatches(99.0))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[0].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[0].'gene'.'drugClasses'[0].'fullName'", containsString("Protease Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[0].'totalNaive'", numberMatches(2943.0))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[0].'totalTreated'", numberMatches(433.0))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'gene'.'name'", containsString("RT"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'gene'.'refSequence'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'gene'.'consensus'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'gene'.'length'", numberMatches(560.0))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'gene'.'drugClasses'.size()", equalTo(2))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'gene'.'drugClasses'[0].'fullName'", containsString("Nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'gene'.'drugClasses'[1].'fullName'", containsString("Non-nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'totalNaive'", numberMatches(2406.0))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[1].'totalTreated'", numberMatches(3131.0))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[2].'gene'.'name'", containsString("IN"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[2].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[2].'gene'.'refSequence'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[2].'gene'.'consensus'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[2].'gene'.'length'", numberMatches(288.0))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[2].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[2].'gene'.'drugClasses'[0].'fullName'", containsString("Integrase Strand Transfer Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[2].'totalNaive'", numberMatches(701.0))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'stats'[2].'totalTreated'", numberMatches(40.0))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'.size()", equalTo(3))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[0].'gene'.'name'", containsString("PR"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[0].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[0].'gene'.'refSequence'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[0].'gene'.'consensus'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[0].'gene'.'length'", numberMatches(99.0))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[0].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[0].'gene'.'drugClasses'[0].'fullName'", containsString("Protease Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[0].'totalNaive'", numberMatches(1855.0))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[0].'totalTreated'", numberMatches(1778.0))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'gene'.'name'", containsString("RT"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'gene'.'refSequence'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'gene'.'consensus'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'gene'.'length'", numberMatches(560.0))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'gene'.'drugClasses'.size()", equalTo(2))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'gene'.'drugClasses'[0].'fullName'", containsString("Nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'gene'.'drugClasses'[1].'fullName'", containsString("Non-nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'totalNaive'", numberMatches(1720.0))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[1].'totalTreated'", numberMatches(1258.0))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[2].'gene'.'name'", containsString("IN"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[2].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[2].'gene'.'refSequence'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[2].'gene'.'consensus'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[2].'gene'.'length'", numberMatches(288.0))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[2].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[2].'gene'.'drugClasses'[0].'fullName'", containsString("Integrase Strand Transfer Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[2].'totalNaive'", numberMatches(352.0))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'stats'[2].'totalTreated'", numberMatches(34.0))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'.size()", equalTo(3))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[0].'gene'.'name'", containsString("PR"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[0].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[0].'gene'.'refSequence'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[0].'gene'.'consensus'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[0].'gene'.'length'", numberMatches(99.0))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[0].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[0].'gene'.'drugClasses'[0].'fullName'", containsString("Protease Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[0].'totalNaive'", numberMatches(3678.0))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[0].'totalTreated'", numberMatches(403.0))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'gene'.'name'", containsString("RT"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'gene'.'refSequence'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'gene'.'consensus'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'gene'.'length'", numberMatches(560.0))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'gene'.'drugClasses'.size()", equalTo(2))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'gene'.'drugClasses'[0].'fullName'", containsString("Nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'gene'.'drugClasses'[1].'fullName'", containsString("Non-nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'totalNaive'", numberMatches(1721.0))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[1].'totalTreated'", numberMatches(4414.0))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[2].'gene'.'name'", containsString("IN"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[2].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[2].'gene'.'refSequence'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[2].'gene'.'consensus'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[2].'gene'.'length'", numberMatches(288.0))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[2].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[2].'gene'.'drugClasses'[0].'fullName'", containsString("Integrase Strand Transfer Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[2].'totalNaive'", numberMatches(273.0))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'stats'[2].'totalTreated'", numberMatches(17.0))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'.size()", equalTo(3))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[0].'gene'.'name'", containsString("PR"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[0].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[0].'gene'.'refSequence'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[0].'gene'.'consensus'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[0].'gene'.'length'", numberMatches(99.0))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[0].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[0].'gene'.'drugClasses'[0].'fullName'", containsString("Protease Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[0].'totalNaive'", numberMatches(20926.0))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[0].'totalTreated'", numberMatches(753.0))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'gene'.'name'", containsString("RT"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'gene'.'refSequence'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'gene'.'consensus'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'gene'.'length'", numberMatches(560.0))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'gene'.'drugClasses'.size()", equalTo(2))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'gene'.'drugClasses'[0].'fullName'", containsString("Nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'gene'.'drugClasses'[1].'fullName'", containsString("Non-nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'totalNaive'", numberMatches(19398.0))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[1].'totalTreated'", numberMatches(9128.0))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[2].'gene'.'name'", containsString("IN"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[2].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[2].'gene'.'refSequence'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[2].'gene'.'consensus'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[2].'gene'.'length'", numberMatches(288.0))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[2].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[2].'gene'.'drugClasses'[0].'fullName'", containsString("Integrase Strand Transfer Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[2].'totalNaive'", numberMatches(2405.0))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'stats'[2].'totalTreated'", numberMatches(5.0))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'.size()", equalTo(3))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[0].'gene'.'name'", containsString("PR"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[0].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[0].'gene'.'refSequence'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[0].'gene'.'consensus'", containsString("PQITLWQRPLVTIKIGGQLKEALLDTGADDTVLEEMNLPGRWKPKMIGGIGGFIKVRQYDQILIEICGHKAIGTVLVGPTPVNIIGRNLLTQIGCTLNF"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[0].'gene'.'length'", numberMatches(99.0))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[0].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[0].'gene'.'drugClasses'[0].'fullName'", containsString("Protease Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[0].'totalNaive'", numberMatches(8742.0))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[0].'totalTreated'", numberMatches(409.0))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'gene'.'name'", containsString("RT"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'gene'.'refSequence'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'gene'.'consensus'", containsString("PISPIETVPVKLKPGMDGPKVKQWPLTEEKIKALVEICTEMEKEGKISKIGPENPYNTPVFAIKKKDSTKWRKLVDFRELNKRTQDFWEVQLGIPHPAGLKKKKSVTVLDVGDAYFSVPLDKDFRKYTAFTIPSINNETPGIRYQYNVLPQGWKGSPAIFQSSMTKILEPFRKQNPDIVIYQYMDDLYVGSDLEIGQHRTKIEELRQHLLRWGFTTPDKKHQKEPPFLWMGYELHPDKWTVQPIVLPEKDSWTVNDIQKLVGKLNWASQIYAGIKVKQLCKLLRGTKALTEVIPLTEEAELELAENREILKEPVHGVYYDPSKDLIAEIQKQGQGQWTYQIYQEPFKNLKTGKYARMRGAHTNDVKQLTEAVQKIATESIVIWGKTPKFKLPIQKETWEAWWTEYWQATWIPEWEFVNTPPLVKLWYQLEKEPIVGAETFYVDGAANRETKLGKAGYVTDRGRQKVVSLTDTTNQKTELQAIHLALQDSGLEVNIVTDSQYALGIIQAQPDKSESELVSQIIEQLIKKEKVYLAWVPAHKGIGGNEQVDKLVSAGIRKVL"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'gene'.'length'", numberMatches(560.0))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'gene'.'drugClasses'.size()", equalTo(2))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'gene'.'drugClasses'[0].'fullName'", containsString("Nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'gene'.'drugClasses'[1].'fullName'", containsString("Non-nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'totalNaive'", numberMatches(6386.0))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[1].'totalTreated'", numberMatches(7118.0))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[2].'gene'.'name'", containsString("IN"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[2].'gene'.'strain'.'name'", containsString("HIV1"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[2].'gene'.'refSequence'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[2].'gene'.'consensus'", containsString("FLDGIDKAQEEHEKYHSNWRAMASDFNLPPVVAKEIVASCDKCQLKGEAMHGQVDCSPGIWQLDCTHLEGKIILVAVHVASGYIEAEVIPAETGQETAYFLLKLAGRWPVKTIHTDNGSNFTSTTVKAACWWAGIKQEFGIPYNPQSQGVVESMNKELKKIIGQVRDQAEHLKTAVQMAVFIHNFKRKGGIGGYSAGERIVDIIATDIQTKELQKQITKIQNFRVYYRDSRDPLWKGPAKLLWKGEGAVVIQDNSDIKVVPRRKAKIIRDYGKQMAGDDCVASRQDED"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[2].'gene'.'length'", numberMatches(288.0))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[2].'gene'.'drugClasses'.size()", equalTo(1))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[2].'gene'.'drugClasses'[0].'fullName'", containsString("Integrase Strand Transfer Inhibitor"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[2].'totalNaive'", numberMatches(1334.0))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'stats'[2].'totalTreated'", numberMatches(174.0));
    }
    
    
    @Test
    public void test_6() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  currentProgramVersion  {publishDate}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'currentProgramVersion'.'publishDate'", containsString("2021-03-21"));
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { sequenceReadsAnalysis  (sequenceReads : [{name:\\\"JiNOKi\\\", minCodonCount:120, strain:HIV1, minCodonCount:470}],sequenceReads : [])  {name,strain{name},cutoffSuggestionLooserLimit,cutoffSuggestionStricterLimit,minPrevalence,minReadDepth,subtypes{displaySubtypes{displayName},distance},bestMatchingSubtype{display,displayWithoutDistance,genotype{indexName},displaySubtypes{classificationLevel},displayGenotypes{displayName},firstNA,lastNA,distancePcnt,referenceYear,discordanceList},mutations{gene{consensus,length,drugClasses{drugs{name}}},position,displayAAChars,insertedNAs,isAmbiguous,text,shortText},histogram{drmSites{percentStop,count},unusualApobecSites{percentStart},unusualNonApobecSites{percentStart,percentStop,count},apobecSites{percentStart,percentStop},apobecDrmSites{percentStart,percentStop},numPositions},histogramByCodonCount{usualSites{cutoff},unusualSites{count},unusualApobecSites{cutoff},unusualNonApobecSites{cutoff},apobecDrmSites{cutoff},stopCodonSites{count},numPositions},internalJsonCodonReadsCoverage}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'sequenceReadsAnalysis'.size()", equalTo(0));
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { sequenceAnalysis  (sequences : [{header:\\\"nT\\\"}, {header:\\\"dX\\\", header:\\\"IvHye4CID96\\\"}],sequences : [{header:\\\"P6bHk\\\", sequence:\\\"o\\\"}, {sequence:\\\"vqsrFZI72xDn8i\\\"}, {sequence:\\\"gLug\\\", sequence:\\\"67MOKJ1kbg8sMLY\\\"}, {header:\\\"ZpNyMxy\\\", sequence:\\\"KLMRrIB\\\", header:\\\"B5Q4P\\\", sequence:\\\"fomQYxZ43Eypz3kh\\\"}])  {isReverseComplement,validationResults{level,message},alignedGeneSequences{firstAA,firstNA,lastNA,alignedAAs},genotypes{displayWithoutDistance,subtype{displayName,classificationLevel},displaySubtypes{indexName},distance,referenceAccession,referenceYear},mutations{reference,position,AAChars,triplet,isInsertion,isDeletion,isAmbiguous,isApobecMutation,isUnsequenced,isDRM,isUnusual,isSDRM,MutationType},mutationPrevalences{matched{AA}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Mutation' is undefined @ 'sequenceAnalysis/mutations/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(685.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { genes  (names : [\\\"RT\\\"],names : [\\\"RT\\\", \\\"PR\\\", \\\"PR\\\", \\\"IN\\\"])  {nameWithStrain,name,consensus,length,MutationType}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(3))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type WrongType: argument 'names[0]' with value 'StringValue{value='RT'}' is not a valid 'EnumGene' @ 'genes'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(13.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type WrongType: argument 'names[0]' with value 'StringValue{value='RT'}' is not a valid 'EnumGene' @ 'genes'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(28.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[2].'type'", containsString("ValidationError"))
                .body("'errors'[2].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'genes/MutationType'"))
                .body("'errors'[2].'locations'.size()", equalTo(1))
                .body("'errors'[2].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[2].'locations'[0].'column'", numberMatches(101.0))
                .body("'errors'[2].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
    }
    
    
    @Test
    public void test_7() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { genes  (names : [\\\"PR\\\", \\\"IN\\\"],names : [\\\"RT\\\"])  {strain{name,display},consensus,length,drugClasses{name,drugs{displayAbbr,fullName}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(2))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type WrongType: argument 'names[0]' with value 'StringValue{value='PR'}' is not a valid 'EnumGene' @ 'genes'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(13.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type WrongType: argument 'names[0]' with value 'StringValue{value='RT'}' is not a valid 'EnumGene' @ 'genes'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(34.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  viewer  {currentProgramVersion{text,publishDate},sequenceAnalysis{strain{name},isReverseComplement,availableGenes{nameWithStrain,name,strain{name},refSequence,reference,drugClasses{name,fullName}},validationResults{level},genotypes{display,displayWithoutDistance,subtype{displayName},genotype{displayName},displaySubtypes{displayName,classificationLevel},displayGenotypes{indexName},lastNA,distance,distancePcnt,referenceYear,discordanceList},bestMatchingGenotype{display,genotype{indexName,displayName},displaySubtypes{classificationLevel},displayGenotypes{classificationLevel},firstNA,referenceCountry,referenceYear},mixturePcnt,frameShifts{position,isInsertion,isDeletion,size,text},mutationPrevalences{others{AA,subtypes{AA,subtype{name},frequencyNaive,percentageNaive,frequencyTreated}}},algorithmComparison{drugClass{drugs{displayAbbr}},drugScores{SIR,interpretation}}},sequenceReadsAnalysis{cutoffSuggestionStricterLimit,minPrevalence,availableGenes{name,strain{name,display},refSequence,consensus,MutationType},allGeneSequenceReads{gene{nameWithStrain,name,reference,length,MutationType},firstAA,lastAA,internalJsonAllPositionCodonReads,size,readDepthStats{min,max,n},alignedNAs,alignedAAs,mutations{gene{name,strain{name},reference,consensus,drugClasses{fullName},MutationType},consensus,position,displayAAs,displayAAChars,AAChars,isInsertion,isApobecDRM,isUnsequenced,isDRM,MutationType},histogram{usualSites{percentStart,count},drmSites{percentStart,count},unusualApobecSites{percentStart},unusualNonApobecSites{percentStop,count},stopCodonSites{percentStart,count},numPositions}},histogramByCodonCount{usualSites{count},unusualSites{cutoff},unusualApobecSites{cutoff,count},unusualNonApobecSites{cutoff},stopCodonSites{cutoff,count}},readDepthStats{standardDeviation,values,percentile},readDepthStatsDRP{mean,min,max,sum,values,percentile}},mutationPrevalenceSubtypes{name}}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(4))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'viewer/sequenceReadsAnalysis/availableGenes/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(1010.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'viewer/sequenceReadsAnalysis/allGeneSequenceReads/gene/MutationType'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(1087.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[2].'type'", containsString("ValidationError"))
                .body("'errors'[2].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'viewer/sequenceReadsAnalysis/allGeneSequenceReads/mutations/gene/MutationType'"))
                .body("'errors'[2].'locations'.size()", equalTo(1))
                .body("'errors'[2].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[2].'locations'[0].'column'", numberMatches(1278.0))
                .body("'errors'[2].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[3].'type'", containsString("ValidationError"))
                .body("'errors'[3].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Mutation' is undefined @ 'viewer/sequenceReadsAnalysis/allGeneSequenceReads/mutations/MutationType'"))
                .body("'errors'[3].'locations'.size()", equalTo(1))
                .body("'errors'[3].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[3].'locations'[0].'column'", numberMatches(1389.0))
                .body("'errors'[3].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { sequenceAnalysis  (sequences : [{sequence:\\\"gjTVmv\\\"}, {header:\\\"\\\", sequence:\\\"IpXYJ3qHaX\\\", sequence:\\\"flJswDx\\\"}, {header:\\\"BQkyzPY\\\", sequence:\\\"IhHKXXW\\\"}],sequences : [{header:\\\"x1U\\\", sequence:\\\"r4VMsoMf\\\"}, {header:\\\"Yi1yGlwsV5\\\", sequence:\\\"iVHj_tVuxJGwK0JI\\\", sequence:\\\"s0JFNH7\\\"}, {header:\\\"myBxKVe3\\\"}, {sequence:\\\"\\\", header:\\\"TQ_ii\\\", sequence:\\\"u1rouYr1hEWbRlEh\\\"}])  {isReverseComplement,validationResults{level},bestMatchingSubtype{displayWithoutDistance,displayGenotypes{indexName},firstNA,referenceYear},mixturePcnt,drugResistance{gene{nameWithStrain,reference,consensus},drugScores{drug{name},SIR,score,level,text,partialScores{mutations{reference,displayAAs,AAs,displayAAChars,insertedNAs,isInsertion,isIndel,isAmbiguous,isApobecMutation,isDRM,hasStop,isUnusual,isSDRM,text}}},commentsByTypes{comments{drugClass{name,fullName,gene{strain{name},refSequence,reference,MutationType}},type,highlightText}}},algorithmComparison{drugClass{drugs{name}}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'sequenceAnalysis/drugResistance/commentsByTypes/comments/drugClass/gene/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(863.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  viewer  {currentProgramVersion{publishDate},genes{nameWithStrain,strain{name},drugClasses{name,fullName,drugs{name,displayAbbr,fullName}}},mutationPrevalenceSubtypes{name}}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'viewer'.'currentProgramVersion'.'publishDate'", containsString("2021-03-21"))
                .body("'data'.'viewer'.'genes'.size()", equalTo(3))
                .body("'data'.'viewer'.'genes'[0].'nameWithStrain'", containsString("HIV1PR"))
                .body("'data'.'viewer'.'genes'[0].'strain'.'name'", containsString("HIV1"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'.size()", equalTo(1))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'name'", containsString("PI"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'fullName'", containsString("Protease Inhibitor"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'.size()", equalTo(8))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[0].'name'", containsString("ATV"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[0].'displayAbbr'", containsString("ATV/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[0].'fullName'", containsString("atazanavir/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[1].'name'", containsString("DRV"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[1].'displayAbbr'", containsString("DRV/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[1].'fullName'", containsString("darunavir/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[2].'name'", containsString("FPV"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[2].'displayAbbr'", containsString("FPV/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[2].'fullName'", containsString("fosamprenavir/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[3].'name'", containsString("IDV"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[3].'displayAbbr'", containsString("IDV/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[3].'fullName'", containsString("indinavir/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[4].'name'", containsString("LPV"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[4].'displayAbbr'", containsString("LPV/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[4].'fullName'", containsString("lopinavir/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[5].'name'", containsString("NFV"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[5].'displayAbbr'", containsString("NFV"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[5].'fullName'", containsString("nelfinavir"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[6].'name'", containsString("SQV"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[6].'displayAbbr'", containsString("SQV/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[6].'fullName'", containsString("saquinavir/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[7].'name'", containsString("TPV"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[7].'displayAbbr'", containsString("TPV/r"))
                .body("'data'.'viewer'.'genes'[0].'drugClasses'[0].'drugs'[7].'fullName'", containsString("tipranavir/r"))
                .body("'data'.'viewer'.'genes'[1].'nameWithStrain'", containsString("HIV1RT"))
                .body("'data'.'viewer'.'genes'[1].'strain'.'name'", containsString("HIV1"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'.size()", equalTo(2))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'name'", containsString("NRTI"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'fullName'", containsString("Nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'.size()", equalTo(7))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[0].'name'", containsString("ABC"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[0].'displayAbbr'", containsString("ABC"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[0].'fullName'", containsString("abacavir"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[1].'name'", containsString("AZT"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[1].'displayAbbr'", containsString("AZT"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[1].'fullName'", containsString("zidovudine"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[2].'name'", containsString("D4T"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[2].'displayAbbr'", containsString("D4T"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[2].'fullName'", containsString("stavudine"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[3].'name'", containsString("DDI"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[3].'displayAbbr'", containsString("DDI"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[3].'fullName'", containsString("didanosine"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[4].'name'", containsString("FTC"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[4].'displayAbbr'", containsString("FTC"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[4].'fullName'", containsString("emtricitabine"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[5].'name'", containsString("LMV"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[5].'displayAbbr'", containsString("3TC"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[5].'fullName'", containsString("lamivudine"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[6].'name'", containsString("TDF"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[6].'displayAbbr'", containsString("TDF"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[0].'drugs'[6].'fullName'", containsString("tenofovir"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'name'", containsString("NNRTI"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'fullName'", containsString("Non-nucleoside Reverse Transcriptase Inhibitor"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'.size()", equalTo(5))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[0].'name'", containsString("DOR"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[0].'displayAbbr'", containsString("DOR"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[0].'fullName'", containsString("doravirine"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[1].'name'", containsString("EFV"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[1].'displayAbbr'", containsString("EFV"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[1].'fullName'", containsString("efavirenz"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[2].'name'", containsString("ETR"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[2].'displayAbbr'", containsString("ETR"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[2].'fullName'", containsString("etravirine"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[3].'name'", containsString("NVP"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[3].'displayAbbr'", containsString("NVP"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[3].'fullName'", containsString("nevirapine"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[4].'name'", containsString("RPV"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[4].'displayAbbr'", containsString("RPV"))
                .body("'data'.'viewer'.'genes'[1].'drugClasses'[1].'drugs'[4].'fullName'", containsString("rilpivirine"))
                .body("'data'.'viewer'.'genes'[2].'nameWithStrain'", containsString("HIV1IN"))
                .body("'data'.'viewer'.'genes'[2].'strain'.'name'", containsString("HIV1"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'.size()", equalTo(1))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'name'", containsString("INSTI"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'fullName'", containsString("Integrase Strand Transfer Inhibitor"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'.size()", equalTo(5))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[0].'name'", containsString("BIC"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[0].'displayAbbr'", containsString("BIC"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[0].'fullName'", containsString("bictegravir"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[1].'name'", containsString("CAB"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[1].'displayAbbr'", containsString("CAB"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[1].'fullName'", containsString("cabotegravir"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[2].'name'", containsString("DTG"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[2].'displayAbbr'", containsString("DTG"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[2].'fullName'", containsString("dolutegravir"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[3].'name'", containsString("EVG"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[3].'displayAbbr'", containsString("EVG"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[3].'fullName'", containsString("elvitegravir"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[4].'name'", containsString("RAL"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[4].'displayAbbr'", containsString("RAL"))
                .body("'data'.'viewer'.'genes'[2].'drugClasses'[0].'drugs'[4].'fullName'", containsString("raltegravir"))
                .body("'data'.'viewer'.'mutationPrevalenceSubtypes'.size()", equalTo(8))
                .body("'data'.'viewer'.'mutationPrevalenceSubtypes'[0].'name'", containsString("A"))
                .body("'data'.'viewer'.'mutationPrevalenceSubtypes'[1].'name'", containsString("B"))
                .body("'data'.'viewer'.'mutationPrevalenceSubtypes'[2].'name'", containsString("C"))
                .body("'data'.'viewer'.'mutationPrevalenceSubtypes'[3].'name'", containsString("D"))
                .body("'data'.'viewer'.'mutationPrevalenceSubtypes'[4].'name'", containsString("F"))
                .body("'data'.'viewer'.'mutationPrevalenceSubtypes'[5].'name'", containsString("G"))
                .body("'data'.'viewer'.'mutationPrevalenceSubtypes'[6].'name'", containsString("CRF01_AE"))
                .body("'data'.'viewer'.'mutationPrevalenceSubtypes'[7].'name'", containsString("CRF02_AG"));
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  mutationPrevalenceSubtypes  {name}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'data'.'mutationPrevalenceSubtypes'.size()", equalTo(8))
                .body("'data'.'mutationPrevalenceSubtypes'[0].'name'", containsString("A"))
                .body("'data'.'mutationPrevalenceSubtypes'[1].'name'", containsString("B"))
                .body("'data'.'mutationPrevalenceSubtypes'[2].'name'", containsString("C"))
                .body("'data'.'mutationPrevalenceSubtypes'[3].'name'", containsString("D"))
                .body("'data'.'mutationPrevalenceSubtypes'[4].'name'", containsString("F"))
                .body("'data'.'mutationPrevalenceSubtypes'[5].'name'", containsString("G"))
                .body("'data'.'mutationPrevalenceSubtypes'[6].'name'", containsString("CRF01_AE"))
                .body("'data'.'mutationPrevalenceSubtypes'[7].'name'", containsString("CRF02_AG"));
    }
    
    
    @Test
    public void test_8() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { mutationsAnalysis  (mutations : [\\\"P\\\", \\\"ZrQawirXrsR5\\\"],mutations : [\\\"nUjXEFGa\\\", \\\"FHJXuFh5\\\"])  {name,algorithmComparison{drugScores{drug{displayAbbr,drugClass{name,fullName,gene{nameWithStrain,reference,length}}}}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'type'", containsString("DataFetchingException"))
                .body("'errors'[0].'message'", containsString("Exception while fetching data (/mutationsAnalysis) : Tried to parse mutation string using invalid parameters: nUjXEFGa"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(5.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[0].'details'.size()", equalTo(1))
                .body("'errors'[0].'details'[0].'exception'", containsString("edu.stanford.hivdb.mutations.Mutation$InvalidMutationException: Tried to parse mutation string using invalid parameters: nUjXEFGa"))
                .body("'errors'[0].'details'[0].'message'", containsString("Tried to parse mutation string using invalid parameters: nUjXEFGa"))
                .body("'errors'[0].'details'[0].'stackTrace'.size()", equalTo(70))
                .body("'errors'[0].'details'[0].'stackTrace'[0].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[0].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[0].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[0].'declaringClass'", containsString("edu.stanford.hivdb.hivfacts.HIVDataLoader"))
                .body("'errors'[0].'details'[0].'stackTrace'[0].'methodName'", containsString("parseMutationString"))
                .body("'errors'[0].'details'[0].'stackTrace'[0].'fileName'", containsString("HIVDataLoader.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[0].'lineNumber'", numberMatches(499.0))
                .body("'errors'[0].'details'[0].'stackTrace'[0].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[1].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[1].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[1].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[1].'declaringClass'", containsString("edu.stanford.hivdb.hivfacts.HIVDataLoader"))
                .body("'errors'[0].'details'[0].'stackTrace'[1].'methodName'", containsString("lambda$newMutationSet$8"))
                .body("'errors'[0].'details'[0].'stackTrace'[1].'fileName'", containsString("HIVDataLoader.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[1].'lineNumber'", numberMatches(562.0))
                .body("'errors'[0].'details'[0].'stackTrace'[1].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[2].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[2].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[2].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[2].'declaringClass'", containsString("edu.stanford.hivdb.mutations.MutationSet"))
                .body("'errors'[0].'details'[0].'stackTrace'[2].'methodName'", containsString("lambda$parseString$5"))
                .body("'errors'[0].'details'[0].'stackTrace'[2].'fileName'", containsString("MutationSet.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[2].'lineNumber'", numberMatches(182.0))
                .body("'errors'[0].'details'[0].'stackTrace'[2].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[3].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[3].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[3].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[3].'declaringClass'", containsString("java.util.stream.ReferencePipeline$3$1"))
                .body("'errors'[0].'details'[0].'stackTrace'[3].'methodName'", containsString("accept"))
                .body("'errors'[0].'details'[0].'stackTrace'[3].'fileName'", containsString("ReferencePipeline.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[3].'lineNumber'", numberMatches(195.0))
                .body("'errors'[0].'details'[0].'stackTrace'[3].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[4].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[4].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[4].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[4].'declaringClass'", containsString("java.util.stream.ReferencePipeline$2$1"))
                .body("'errors'[0].'details'[0].'stackTrace'[4].'methodName'", containsString("accept"))
                .body("'errors'[0].'details'[0].'stackTrace'[4].'fileName'", containsString("ReferencePipeline.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[4].'lineNumber'", numberMatches(177.0))
                .body("'errors'[0].'details'[0].'stackTrace'[4].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[5].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[5].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[5].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[5].'declaringClass'", containsString("java.util.ArrayList$ArrayListSpliterator"))
                .body("'errors'[0].'details'[0].'stackTrace'[5].'methodName'", containsString("forEachRemaining"))
                .body("'errors'[0].'details'[0].'stackTrace'[5].'fileName'", containsString("ArrayList.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[5].'lineNumber'", numberMatches(1624.0))
                .body("'errors'[0].'details'[0].'stackTrace'[5].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[6].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[6].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[6].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[6].'declaringClass'", containsString("java.util.stream.AbstractPipeline"))
                .body("'errors'[0].'details'[0].'stackTrace'[6].'methodName'", containsString("copyInto"))
                .body("'errors'[0].'details'[0].'stackTrace'[6].'fileName'", containsString("AbstractPipeline.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[6].'lineNumber'", numberMatches(484.0))
                .body("'errors'[0].'details'[0].'stackTrace'[6].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[7].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[7].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[7].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[7].'declaringClass'", containsString("java.util.stream.AbstractPipeline"))
                .body("'errors'[0].'details'[0].'stackTrace'[7].'methodName'", containsString("wrapAndCopyInto"))
                .body("'errors'[0].'details'[0].'stackTrace'[7].'fileName'", containsString("AbstractPipeline.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[7].'lineNumber'", numberMatches(474.0))
                .body("'errors'[0].'details'[0].'stackTrace'[7].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[8].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[8].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[8].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[8].'declaringClass'", containsString("java.util.stream.ReduceOps$ReduceOp"))
                .body("'errors'[0].'details'[0].'stackTrace'[8].'methodName'", containsString("evaluateSequential"))
                .body("'errors'[0].'details'[0].'stackTrace'[8].'fileName'", containsString("ReduceOps.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[8].'lineNumber'", numberMatches(913.0))
                .body("'errors'[0].'details'[0].'stackTrace'[8].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[9].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[9].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[9].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[9].'declaringClass'", containsString("java.util.stream.AbstractPipeline"))
                .body("'errors'[0].'details'[0].'stackTrace'[9].'methodName'", containsString("evaluate"))
                .body("'errors'[0].'details'[0].'stackTrace'[9].'fileName'", containsString("AbstractPipeline.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[9].'lineNumber'", numberMatches(234.0))
                .body("'errors'[0].'details'[0].'stackTrace'[9].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[10].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[10].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[10].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[10].'declaringClass'", containsString("java.util.stream.ReferencePipeline"))
                .body("'errors'[0].'details'[0].'stackTrace'[10].'methodName'", containsString("collect"))
                .body("'errors'[0].'details'[0].'stackTrace'[10].'fileName'", containsString("ReferencePipeline.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[10].'lineNumber'", numberMatches(578.0))
                .body("'errors'[0].'details'[0].'stackTrace'[10].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[11].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[11].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[11].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[11].'declaringClass'", containsString("edu.stanford.hivdb.mutations.MutationSet"))
                .body("'errors'[0].'details'[0].'stackTrace'[11].'methodName'", containsString("parseString"))
                .body("'errors'[0].'details'[0].'stackTrace'[11].'fileName'", containsString("MutationSet.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[11].'lineNumber'", numberMatches(183.0))
                .body("'errors'[0].'details'[0].'stackTrace'[11].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[12].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[12].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[12].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[12].'declaringClass'", containsString("edu.stanford.hivdb.hivfacts.HIVDataLoader"))
                .body("'errors'[0].'details'[0].'stackTrace'[12].'methodName'", containsString("newMutationSet"))
                .body("'errors'[0].'details'[0].'stackTrace'[12].'fileName'", containsString("HIVDataLoader.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[12].'lineNumber'", numberMatches(561.0))
                .body("'errors'[0].'details'[0].'stackTrace'[12].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[13].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[13].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[13].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[13].'declaringClass'", containsString("edu.stanford.hivdb.hivfacts.HIVDataLoader"))
                .body("'errors'[0].'details'[0].'stackTrace'[13].'methodName'", containsString("newMutationSet"))
                .body("'errors'[0].'details'[0].'stackTrace'[13].'fileName'", containsString("HIVDataLoader.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[13].'lineNumber'", numberMatches(517.0))
                .body("'errors'[0].'details'[0].'stackTrace'[13].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[14].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[14].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[14].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[14].'declaringClass'", containsString("edu.stanford.hivdb.hivfacts.HIV"))
                .body("'errors'[0].'details'[0].'stackTrace'[14].'methodName'", containsString("newMutationSet"))
                .body("'errors'[0].'details'[0].'stackTrace'[14].'fileName'", containsString("HIV.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[14].'lineNumber'", numberMatches(188.0))
                .body("'errors'[0].'details'[0].'stackTrace'[14].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[15].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[15].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[15].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[15].'declaringClass'", containsString("edu.stanford.hivdb.graphql.SierraSchema"))
                .body("'errors'[0].'details'[0].'stackTrace'[15].'methodName'", containsString("prepareMutationsAnalysisData"))
                .body("'errors'[0].'details'[0].'stackTrace'[15].'fileName'", containsString("SierraSchema.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[15].'lineNumber'", numberMatches(108.0))
                .body("'errors'[0].'details'[0].'stackTrace'[15].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[16].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[16].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[16].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[16].'declaringClass'", containsString("edu.stanford.hivdb.graphql.SierraSchema"))
                .body("'errors'[0].'details'[0].'stackTrace'[16].'methodName'", containsString("lambda$makeMutationsAnalysisDataFetcher$3"))
                .body("'errors'[0].'details'[0].'stackTrace'[16].'fileName'", containsString("SierraSchema.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[16].'lineNumber'", numberMatches(117.0))
                .body("'errors'[0].'details'[0].'stackTrace'[16].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[17].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[17].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[17].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[17].'declaringClass'", containsString("graphql.execution.ExecutionStrategy"))
                .body("'errors'[0].'details'[0].'stackTrace'[17].'methodName'", containsString("fetchField"))
                .body("'errors'[0].'details'[0].'stackTrace'[17].'fileName'", containsString("ExecutionStrategy.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[17].'lineNumber'", numberMatches(270.0))
                .body("'errors'[0].'details'[0].'stackTrace'[17].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[18].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[18].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[18].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[18].'declaringClass'", containsString("graphql.execution.ExecutionStrategy"))
                .body("'errors'[0].'details'[0].'stackTrace'[18].'methodName'", containsString("resolveFieldWithInfo"))
                .body("'errors'[0].'details'[0].'stackTrace'[18].'fileName'", containsString("ExecutionStrategy.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[18].'lineNumber'", numberMatches(198.0))
                .body("'errors'[0].'details'[0].'stackTrace'[18].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[19].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[19].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[19].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[19].'declaringClass'", containsString("graphql.execution.AsyncExecutionStrategy"))
                .body("'errors'[0].'details'[0].'stackTrace'[19].'methodName'", containsString("execute"))
                .body("'errors'[0].'details'[0].'stackTrace'[19].'fileName'", containsString("AsyncExecutionStrategy.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[19].'lineNumber'", numberMatches(74.0))
                .body("'errors'[0].'details'[0].'stackTrace'[19].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[20].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[20].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[20].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[20].'declaringClass'", containsString("graphql.execution.Execution"))
                .body("'errors'[0].'details'[0].'stackTrace'[20].'methodName'", containsString("executeOperation"))
                .body("'errors'[0].'details'[0].'stackTrace'[20].'fileName'", containsString("Execution.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[20].'lineNumber'", numberMatches(161.0))
                .body("'errors'[0].'details'[0].'stackTrace'[20].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[21].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[21].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[21].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[21].'declaringClass'", containsString("graphql.execution.Execution"))
                .body("'errors'[0].'details'[0].'stackTrace'[21].'methodName'", containsString("execute"))
                .body("'errors'[0].'details'[0].'stackTrace'[21].'fileName'", containsString("Execution.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[21].'lineNumber'", numberMatches(102.0))
                .body("'errors'[0].'details'[0].'stackTrace'[21].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[22].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[22].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[22].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[22].'declaringClass'", containsString("graphql.GraphQL"))
                .body("'errors'[0].'details'[0].'stackTrace'[22].'methodName'", containsString("execute"))
                .body("'errors'[0].'details'[0].'stackTrace'[22].'fileName'", containsString("GraphQL.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[22].'lineNumber'", numberMatches(605.0))
                .body("'errors'[0].'details'[0].'stackTrace'[22].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[23].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[23].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[23].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[23].'declaringClass'", containsString("graphql.GraphQL"))
                .body("'errors'[0].'details'[0].'stackTrace'[23].'methodName'", containsString("parseValidateAndExecute"))
                .body("'errors'[0].'details'[0].'stackTrace'[23].'fileName'", containsString("GraphQL.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[23].'lineNumber'", numberMatches(538.0))
                .body("'errors'[0].'details'[0].'stackTrace'[23].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[24].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[24].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[24].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[24].'declaringClass'", containsString("graphql.GraphQL"))
                .body("'errors'[0].'details'[0].'stackTrace'[24].'methodName'", containsString("executeAsync"))
                .body("'errors'[0].'details'[0].'stackTrace'[24].'fileName'", containsString("GraphQL.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[24].'lineNumber'", numberMatches(502.0))
                .body("'errors'[0].'details'[0].'stackTrace'[24].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[25].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[25].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[25].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[25].'declaringClass'", containsString("graphql.GraphQL"))
                .body("'errors'[0].'details'[0].'stackTrace'[25].'methodName'", containsString("execute"))
                .body("'errors'[0].'details'[0].'stackTrace'[25].'fileName'", containsString("GraphQL.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[25].'lineNumber'", numberMatches(432.0))
                .body("'errors'[0].'details'[0].'stackTrace'[25].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[26].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[26].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[26].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[26].'declaringClass'", containsString("edu.stanford.hivdb.web.GraphQLService"))
                .body("'errors'[0].'details'[0].'stackTrace'[26].'methodName'", containsString("execute"))
                .body("'errors'[0].'details'[0].'stackTrace'[26].'fileName'", containsString("GraphQLService.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[26].'lineNumber'", numberMatches(75.0))
                .body("'errors'[0].'details'[0].'stackTrace'[26].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[27].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[27].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[27].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[27].'declaringClass'", containsString("jdk.internal.reflect.GeneratedMethodAccessor80"))
                .body("'errors'[0].'details'[0].'stackTrace'[27].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[27].'fileName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[27].'lineNumber'", numberMatches(-1.0))
                .body("'errors'[0].'details'[0].'stackTrace'[27].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[28].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[28].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[28].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[28].'declaringClass'", containsString("jdk.internal.reflect.DelegatingMethodAccessorImpl"))
                .body("'errors'[0].'details'[0].'stackTrace'[28].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[28].'fileName'", containsString("DelegatingMethodAccessorImpl.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[28].'lineNumber'", numberMatches(43.0))
                .body("'errors'[0].'details'[0].'stackTrace'[28].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[29].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[29].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[29].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[29].'declaringClass'", containsString("java.lang.reflect.Method"))
                .body("'errors'[0].'details'[0].'stackTrace'[29].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[29].'fileName'", containsString("Method.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[29].'lineNumber'", numberMatches(564.0))
                .body("'errors'[0].'details'[0].'stackTrace'[29].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[30].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[30].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[30].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[30].'declaringClass'", containsString("org.jboss.resteasy.core.MethodInjectorImpl"))
                .body("'errors'[0].'details'[0].'stackTrace'[30].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[30].'fileName'", containsString("MethodInjectorImpl.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[30].'lineNumber'", numberMatches(138.0))
                .body("'errors'[0].'details'[0].'stackTrace'[30].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[31].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[31].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[31].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[31].'declaringClass'", containsString("org.jboss.resteasy.core.ResourceMethodInvoker"))
                .body("'errors'[0].'details'[0].'stackTrace'[31].'methodName'", containsString("internalInvokeOnTarget"))
                .body("'errors'[0].'details'[0].'stackTrace'[31].'fileName'", containsString("ResourceMethodInvoker.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[31].'lineNumber'", numberMatches(517.0))
                .body("'errors'[0].'details'[0].'stackTrace'[31].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[32].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[32].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[32].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[32].'declaringClass'", containsString("org.jboss.resteasy.core.ResourceMethodInvoker"))
                .body("'errors'[0].'details'[0].'stackTrace'[32].'methodName'", containsString("invokeOnTargetAfterFilter"))
                .body("'errors'[0].'details'[0].'stackTrace'[32].'fileName'", containsString("ResourceMethodInvoker.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[32].'lineNumber'", numberMatches(406.0))
                .body("'errors'[0].'details'[0].'stackTrace'[32].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[33].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[33].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[33].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[33].'declaringClass'", containsString("org.jboss.resteasy.core.ResourceMethodInvoker"))
                .body("'errors'[0].'details'[0].'stackTrace'[33].'methodName'", containsString("lambda$invokeOnTarget$0"))
                .body("'errors'[0].'details'[0].'stackTrace'[33].'fileName'", containsString("ResourceMethodInvoker.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[33].'lineNumber'", numberMatches(370.0))
                .body("'errors'[0].'details'[0].'stackTrace'[33].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[34].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[34].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[34].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[34].'declaringClass'", containsString("org.jboss.resteasy.core.interception.PreMatchContainerRequestContext"))
                .body("'errors'[0].'details'[0].'stackTrace'[34].'methodName'", containsString("filter"))
                .body("'errors'[0].'details'[0].'stackTrace'[34].'fileName'", containsString("PreMatchContainerRequestContext.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[34].'lineNumber'", numberMatches(356.0))
                .body("'errors'[0].'details'[0].'stackTrace'[34].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[35].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[35].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[35].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[35].'declaringClass'", containsString("org.jboss.resteasy.core.ResourceMethodInvoker"))
                .body("'errors'[0].'details'[0].'stackTrace'[35].'methodName'", containsString("invokeOnTarget"))
                .body("'errors'[0].'details'[0].'stackTrace'[35].'fileName'", containsString("ResourceMethodInvoker.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[35].'lineNumber'", numberMatches(372.0))
                .body("'errors'[0].'details'[0].'stackTrace'[35].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[36].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[36].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[36].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[36].'declaringClass'", containsString("org.jboss.resteasy.core.ResourceMethodInvoker"))
                .body("'errors'[0].'details'[0].'stackTrace'[36].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[36].'fileName'", containsString("ResourceMethodInvoker.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[36].'lineNumber'", numberMatches(344.0))
                .body("'errors'[0].'details'[0].'stackTrace'[36].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[37].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[37].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[37].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[37].'declaringClass'", containsString("org.jboss.resteasy.core.ResourceMethodInvoker"))
                .body("'errors'[0].'details'[0].'stackTrace'[37].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[37].'fileName'", containsString("ResourceMethodInvoker.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[37].'lineNumber'", numberMatches(317.0))
                .body("'errors'[0].'details'[0].'stackTrace'[37].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[38].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[38].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[38].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[38].'declaringClass'", containsString("org.jboss.resteasy.core.SynchronousDispatcher"))
                .body("'errors'[0].'details'[0].'stackTrace'[38].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[38].'fileName'", containsString("SynchronousDispatcher.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[38].'lineNumber'", numberMatches(440.0))
                .body("'errors'[0].'details'[0].'stackTrace'[38].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[39].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[39].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[39].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[39].'declaringClass'", containsString("org.jboss.resteasy.core.SynchronousDispatcher"))
                .body("'errors'[0].'details'[0].'stackTrace'[39].'methodName'", containsString("lambda$invoke$4"))
                .body("'errors'[0].'details'[0].'stackTrace'[39].'fileName'", containsString("SynchronousDispatcher.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[39].'lineNumber'", numberMatches(229.0))
                .body("'errors'[0].'details'[0].'stackTrace'[39].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[40].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[40].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[40].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[40].'declaringClass'", containsString("org.jboss.resteasy.core.SynchronousDispatcher"))
                .body("'errors'[0].'details'[0].'stackTrace'[40].'methodName'", containsString("lambda$preprocess$0"))
                .body("'errors'[0].'details'[0].'stackTrace'[40].'fileName'", containsString("SynchronousDispatcher.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[40].'lineNumber'", numberMatches(135.0))
                .body("'errors'[0].'details'[0].'stackTrace'[40].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[41].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[41].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[41].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[41].'declaringClass'", containsString("org.jboss.resteasy.core.interception.PreMatchContainerRequestContext"))
                .body("'errors'[0].'details'[0].'stackTrace'[41].'methodName'", containsString("filter"))
                .body("'errors'[0].'details'[0].'stackTrace'[41].'fileName'", containsString("PreMatchContainerRequestContext.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[41].'lineNumber'", numberMatches(356.0))
                .body("'errors'[0].'details'[0].'stackTrace'[41].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[42].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[42].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[42].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[42].'declaringClass'", containsString("org.jboss.resteasy.core.SynchronousDispatcher"))
                .body("'errors'[0].'details'[0].'stackTrace'[42].'methodName'", containsString("preprocess"))
                .body("'errors'[0].'details'[0].'stackTrace'[42].'fileName'", containsString("SynchronousDispatcher.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[42].'lineNumber'", numberMatches(138.0))
                .body("'errors'[0].'details'[0].'stackTrace'[42].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[43].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[43].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[43].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[43].'declaringClass'", containsString("org.jboss.resteasy.core.SynchronousDispatcher"))
                .body("'errors'[0].'details'[0].'stackTrace'[43].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[43].'fileName'", containsString("SynchronousDispatcher.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[43].'lineNumber'", numberMatches(215.0))
                .body("'errors'[0].'details'[0].'stackTrace'[43].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[44].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[44].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[44].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[44].'declaringClass'", containsString("org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher"))
                .body("'errors'[0].'details'[0].'stackTrace'[44].'methodName'", containsString("service"))
                .body("'errors'[0].'details'[0].'stackTrace'[44].'fileName'", containsString("ServletContainerDispatcher.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[44].'lineNumber'", numberMatches(227.0))
                .body("'errors'[0].'details'[0].'stackTrace'[44].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[45].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[45].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[45].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[45].'declaringClass'", containsString("org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher"))
                .body("'errors'[0].'details'[0].'stackTrace'[45].'methodName'", containsString("service"))
                .body("'errors'[0].'details'[0].'stackTrace'[45].'fileName'", containsString("HttpServletDispatcher.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[45].'lineNumber'", numberMatches(56.0))
                .body("'errors'[0].'details'[0].'stackTrace'[45].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[46].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[46].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[46].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[46].'declaringClass'", containsString("org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher"))
                .body("'errors'[0].'details'[0].'stackTrace'[46].'methodName'", containsString("service"))
                .body("'errors'[0].'details'[0].'stackTrace'[46].'fileName'", containsString("HttpServletDispatcher.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[46].'lineNumber'", numberMatches(51.0))
                .body("'errors'[0].'details'[0].'stackTrace'[46].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[47].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[47].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[47].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[47].'declaringClass'", containsString("javax.servlet.http.HttpServlet"))
                .body("'errors'[0].'details'[0].'stackTrace'[47].'methodName'", containsString("service"))
                .body("'errors'[0].'details'[0].'stackTrace'[47].'fileName'", containsString("HttpServlet.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[47].'lineNumber'", numberMatches(741.0))
                .body("'errors'[0].'details'[0].'stackTrace'[47].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[48].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[48].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[48].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[48].'declaringClass'", containsString("org.apache.catalina.core.ApplicationFilterChain"))
                .body("'errors'[0].'details'[0].'stackTrace'[48].'methodName'", containsString("internalDoFilter"))
                .body("'errors'[0].'details'[0].'stackTrace'[48].'fileName'", containsString("ApplicationFilterChain.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[48].'lineNumber'", numberMatches(231.0))
                .body("'errors'[0].'details'[0].'stackTrace'[48].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[49].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[49].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[49].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[49].'declaringClass'", containsString("org.apache.catalina.core.ApplicationFilterChain"))
                .body("'errors'[0].'details'[0].'stackTrace'[49].'methodName'", containsString("doFilter"))
                .body("'errors'[0].'details'[0].'stackTrace'[49].'fileName'", containsString("ApplicationFilterChain.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[49].'lineNumber'", numberMatches(166.0))
                .body("'errors'[0].'details'[0].'stackTrace'[49].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[50].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[50].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[50].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[50].'declaringClass'", containsString("org.apache.tomcat.websocket.server.WsFilter"))
                .body("'errors'[0].'details'[0].'stackTrace'[50].'methodName'", containsString("doFilter"))
                .body("'errors'[0].'details'[0].'stackTrace'[50].'fileName'", containsString("WsFilter.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[50].'lineNumber'", numberMatches(53.0))
                .body("'errors'[0].'details'[0].'stackTrace'[50].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[51].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[51].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[51].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[51].'declaringClass'", containsString("org.apache.catalina.core.ApplicationFilterChain"))
                .body("'errors'[0].'details'[0].'stackTrace'[51].'methodName'", containsString("internalDoFilter"))
                .body("'errors'[0].'details'[0].'stackTrace'[51].'fileName'", containsString("ApplicationFilterChain.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[51].'lineNumber'", numberMatches(193.0))
                .body("'errors'[0].'details'[0].'stackTrace'[51].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[52].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[52].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[52].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[52].'declaringClass'", containsString("org.apache.catalina.core.ApplicationFilterChain"))
                .body("'errors'[0].'details'[0].'stackTrace'[52].'methodName'", containsString("doFilter"))
                .body("'errors'[0].'details'[0].'stackTrace'[52].'fileName'", containsString("ApplicationFilterChain.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[52].'lineNumber'", numberMatches(166.0))
                .body("'errors'[0].'details'[0].'stackTrace'[52].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[53].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[53].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[53].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[53].'declaringClass'", containsString("org.apache.catalina.core.StandardWrapperValve"))
                .body("'errors'[0].'details'[0].'stackTrace'[53].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[53].'fileName'", containsString("StandardWrapperValve.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[53].'lineNumber'", numberMatches(202.0))
                .body("'errors'[0].'details'[0].'stackTrace'[53].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[54].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[54].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[54].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[54].'declaringClass'", containsString("org.apache.catalina.core.StandardContextValve"))
                .body("'errors'[0].'details'[0].'stackTrace'[54].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[54].'fileName'", containsString("StandardContextValve.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[54].'lineNumber'", numberMatches(96.0))
                .body("'errors'[0].'details'[0].'stackTrace'[54].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[55].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[55].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[55].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[55].'declaringClass'", containsString("org.apache.catalina.authenticator.AuthenticatorBase"))
                .body("'errors'[0].'details'[0].'stackTrace'[55].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[55].'fileName'", containsString("AuthenticatorBase.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[55].'lineNumber'", numberMatches(541.0))
                .body("'errors'[0].'details'[0].'stackTrace'[55].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[56].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[56].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[56].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[56].'declaringClass'", containsString("org.apache.catalina.core.StandardHostValve"))
                .body("'errors'[0].'details'[0].'stackTrace'[56].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[56].'fileName'", containsString("StandardHostValve.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[56].'lineNumber'", numberMatches(139.0))
                .body("'errors'[0].'details'[0].'stackTrace'[56].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[57].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[57].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[57].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[57].'declaringClass'", containsString("org.apache.catalina.valves.ErrorReportValve"))
                .body("'errors'[0].'details'[0].'stackTrace'[57].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[57].'fileName'", containsString("ErrorReportValve.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[57].'lineNumber'", numberMatches(92.0))
                .body("'errors'[0].'details'[0].'stackTrace'[57].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[58].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[58].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[58].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[58].'declaringClass'", containsString("org.apache.catalina.valves.AbstractAccessLogValve"))
                .body("'errors'[0].'details'[0].'stackTrace'[58].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[58].'fileName'", containsString("AbstractAccessLogValve.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[58].'lineNumber'", numberMatches(690.0))
                .body("'errors'[0].'details'[0].'stackTrace'[58].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[59].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[59].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[59].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[59].'declaringClass'", containsString("org.apache.catalina.core.StandardEngineValve"))
                .body("'errors'[0].'details'[0].'stackTrace'[59].'methodName'", containsString("invoke"))
                .body("'errors'[0].'details'[0].'stackTrace'[59].'fileName'", containsString("StandardEngineValve.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[59].'lineNumber'", numberMatches(74.0))
                .body("'errors'[0].'details'[0].'stackTrace'[59].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[60].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[60].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[60].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[60].'declaringClass'", containsString("org.apache.catalina.connector.CoyoteAdapter"))
                .body("'errors'[0].'details'[0].'stackTrace'[60].'methodName'", containsString("service"))
                .body("'errors'[0].'details'[0].'stackTrace'[60].'fileName'", containsString("CoyoteAdapter.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[60].'lineNumber'", numberMatches(343.0))
                .body("'errors'[0].'details'[0].'stackTrace'[60].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[61].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[61].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[61].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[61].'declaringClass'", containsString("org.apache.coyote.http11.Http11Processor"))
                .body("'errors'[0].'details'[0].'stackTrace'[61].'methodName'", containsString("service"))
                .body("'errors'[0].'details'[0].'stackTrace'[61].'fileName'", containsString("Http11Processor.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[61].'lineNumber'", numberMatches(373.0))
                .body("'errors'[0].'details'[0].'stackTrace'[61].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[62].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[62].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[62].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[62].'declaringClass'", containsString("org.apache.coyote.AbstractProcessorLight"))
                .body("'errors'[0].'details'[0].'stackTrace'[62].'methodName'", containsString("process"))
                .body("'errors'[0].'details'[0].'stackTrace'[62].'fileName'", containsString("AbstractProcessorLight.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[62].'lineNumber'", numberMatches(65.0))
                .body("'errors'[0].'details'[0].'stackTrace'[62].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[63].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[63].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[63].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[63].'declaringClass'", containsString("org.apache.coyote.AbstractProtocol$ConnectionHandler"))
                .body("'errors'[0].'details'[0].'stackTrace'[63].'methodName'", containsString("process"))
                .body("'errors'[0].'details'[0].'stackTrace'[63].'fileName'", containsString("AbstractProtocol.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[63].'lineNumber'", numberMatches(868.0))
                .body("'errors'[0].'details'[0].'stackTrace'[63].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[64].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[64].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[64].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[64].'declaringClass'", containsString("org.apache.tomcat.util.net.NioEndpoint$SocketProcessor"))
                .body("'errors'[0].'details'[0].'stackTrace'[64].'methodName'", containsString("doRun"))
                .body("'errors'[0].'details'[0].'stackTrace'[64].'fileName'", containsString("NioEndpoint.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[64].'lineNumber'", numberMatches(1590.0))
                .body("'errors'[0].'details'[0].'stackTrace'[64].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[65].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[65].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[65].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[65].'declaringClass'", containsString("org.apache.tomcat.util.net.SocketProcessorBase"))
                .body("'errors'[0].'details'[0].'stackTrace'[65].'methodName'", containsString("run"))
                .body("'errors'[0].'details'[0].'stackTrace'[65].'fileName'", containsString("SocketProcessorBase.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[65].'lineNumber'", numberMatches(49.0))
                .body("'errors'[0].'details'[0].'stackTrace'[65].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[66].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[66].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[66].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[66].'declaringClass'", containsString("java.util.concurrent.ThreadPoolExecutor"))
                .body("'errors'[0].'details'[0].'stackTrace'[66].'methodName'", containsString("runWorker"))
                .body("'errors'[0].'details'[0].'stackTrace'[66].'fileName'", containsString("ThreadPoolExecutor.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[66].'lineNumber'", numberMatches(1130.0))
                .body("'errors'[0].'details'[0].'stackTrace'[66].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[67].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[67].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[67].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[67].'declaringClass'", containsString("java.util.concurrent.ThreadPoolExecutor$Worker"))
                .body("'errors'[0].'details'[0].'stackTrace'[67].'methodName'", containsString("run"))
                .body("'errors'[0].'details'[0].'stackTrace'[67].'fileName'", containsString("ThreadPoolExecutor.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[67].'lineNumber'", numberMatches(630.0))
                .body("'errors'[0].'details'[0].'stackTrace'[67].'format'", numberMatches(2.0))
                .body("'errors'[0].'details'[0].'stackTrace'[68].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[68].'moduleName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[68].'moduleVersion'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[68].'declaringClass'", containsString("org.apache.tomcat.util.threads.TaskThread$WrappingRunnable"))
                .body("'errors'[0].'details'[0].'stackTrace'[68].'methodName'", containsString("run"))
                .body("'errors'[0].'details'[0].'stackTrace'[68].'fileName'", containsString("TaskThread.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[68].'lineNumber'", numberMatches(61.0))
                .body("'errors'[0].'details'[0].'stackTrace'[68].'format'", numberMatches(0.0))
                .body("'errors'[0].'details'[0].'stackTrace'[69].'classLoaderName'", nullValue())
                .body("'errors'[0].'details'[0].'stackTrace'[69].'moduleName'", containsString("java.base"))
                .body("'errors'[0].'details'[0].'stackTrace'[69].'moduleVersion'", containsString("14.0.1"))
                .body("'errors'[0].'details'[0].'stackTrace'[69].'declaringClass'", containsString("java.lang.Thread"))
                .body("'errors'[0].'details'[0].'stackTrace'[69].'methodName'", containsString("run"))
                .body("'errors'[0].'details'[0].'stackTrace'[69].'fileName'", containsString("Thread.java"))
                .body("'errors'[0].'details'[0].'stackTrace'[69].'lineNumber'", numberMatches(832.0))
                .body("'errors'[0].'details'[0].'stackTrace'[69].'format'", numberMatches(2.0))
                .body("'data'.'mutationsAnalysis'", nullValue());
    }
    
    
    @Test
    public void test_9() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { sequenceReadsAnalysis  (sequenceReads : [{strain:HIV1, minPrevalence:0.43007517, minCodonCount:284, minReadDepth:-2146488565, name:\\\"JZa3PZvG0zp2CqV\\\", minCodonCount:419, minReadDepth:403}],sequenceReads : [{name:\\\"X8tiqjFMvLrN\\\", minPrevalence:0.26752156, minCodonCount:339, minReadDepth:39, strain:HIV1, minPrevalence:0.93145293, minCodonCount:-753728698784151749}, {name:\\\"NqEC9aFtT_\\\", minPrevalence:0.4504531, minCodonCount:101, minReadDepth:985, strain:HIV1, minCodonCount:755}])  {cutoffSuggestionLooserLimit,cutoffSuggestionStricterLimit,validationResults{level,message},minReadDepth,availableGenes{strain{name},consensus,MutationType},subtypes{displayWithoutDistance,genotype{indexName},displaySubtypes{classificationLevel},firstNA,referenceAccession,referenceCountry,referenceYear,discordanceList},drugResistance{version{text,family,version,strain{name,display},publishDate},mutationsByTypes{mutationType,mutations{reference,consensus,position,AAChars,triplet,insertedNAs,isInsertion,isAmbiguous,isDRM,hasStop,isSDRM,comments{gene{nameWithStrain,strain{display},refSequence,length,drugClasses{name,drugs{fullName}}},drugClass{drugs{displayAbbr,fullName}},triggeredAAs},text,shortText}}},readDepthStatsDRP{standardDeviation,min,max,n,sum,values},codonReadsCoverage{position,isTrimmed}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'sequenceReadsAnalysis/availableGenes/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(629.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
    }
    
    
    @Test
    public void test_10() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  mutationPrevalenceSubtypes  {name,stats{gene{nameWithStrain,name,consensus,MutationType}}}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(1))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'mutationPrevalenceSubtypes/stats/gene/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(80.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
    }
    
    
    @Test
    public void test_11() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { sequenceAnalysis  (sequences : [],sequences : [])  {strain{name},isReverseComplement,alignedGeneSequences{lastNA,alignedAAs,mutations{reference,position,displayAAChars,AAChars,insertedNAs,isInsertion,isIndel,isApobecMutation,isApobecDRM,isDRM,isUnusual,primaryType,comments{name,gene{name,reference,drugClasses{drugs{name,displayAbbr,fullName}},MutationType},drugClass{fullName,drugs{displayAbbr,fullName},gene{nameWithStrain,strain{name},refSequence,consensus}},type,triggeredAAs,highlightText}}},subtypesV2{genotype{classificationLevel},displaySubtypes{indexName,displayName},displayGenotypes{classificationLevel},lastNA,distance,referenceAccession},bestMatchingGenotype{display,subtype{indexName,displayName,classificationLevel},genotype{classificationLevel},displaySubtypes{indexName,displayName},lastNA,distancePcnt,referenceAccession,referenceCountry,referenceYear,discordanceList},mutations{gene{nameWithStrain,strain{name},refSequence,length,drugClasses{name}},displayAAs,displayAAChars,insertedNAs,isIndel,isAmbiguous,isApobecMutation,isApobecDRM,isDRM,isSDRM,MutationType,primaryType,shortText},drugResistance{version{display,version,strain{name}},algorithm{text,family,strain{name,display},publishDate},gene{nameWithStrain,name,refSequence,reference,length,MutationType},drugScores{drugClass{fullName}},mutationsByTypes{mutationType,mutations{gene{nameWithStrain,name,strain{name,display},refSequence,consensus,drugClasses{fullName}},reference,consensus,position,displayAAs,AAChars,insertedNAs,isInsertion,isIndel,isAmbiguous,isDRM,hasStop,MutationType,primaryType,text}}},mutationPrevalences{matched{AA},others{AA}}}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(4))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'sequenceAnalysis/alignedGeneSequences/mutations/comments/gene/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(350.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Mutation' is undefined @ 'sequenceAnalysis/mutations/MutationType'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(1074.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[2].'type'", containsString("ValidationError"))
                .body("'errors'[2].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'sequenceAnalysis/drugResistance/gene/MutationType'"))
                .body("'errors'[2].'locations'.size()", equalTo(1))
                .body("'errors'[2].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[2].'locations'[0].'column'", numberMatches(1273.0))
                .body("'errors'[2].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[3].'type'", containsString("ValidationError"))
                .body("'errors'[3].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Mutation' is undefined @ 'sequenceAnalysis/drugResistance/mutationsByTypes/mutations/MutationType'"))
                .body("'errors'[3].'locations'.size()", equalTo(1))
                .body("'errors'[3].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[3].'locations'[0].'column'", numberMatches(1556.0))
                .body("'errors'[3].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
    }
    
    
    @Test
    public void test_12() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \"  { genes  (names : [\\\"PR\\\", \\\"RT\\\"],names : [\\\"PR\\\", \\\"PR\\\"])  {nameWithStrain,name,strain{name,display},drugClasses{fullName},MutationType}       } \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(3))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type WrongType: argument 'names[0]' with value 'StringValue{value='PR'}' is not a valid 'EnumGene' @ 'genes'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(13.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type WrongType: argument 'names[0]' with value 'StringValue{value='PR'}' is not a valid 'EnumGene' @ 'genes'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(34.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[2].'type'", containsString("ValidationError"))
                .body("'errors'[2].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'genes/MutationType'"))
                .body("'errors'[2].'locations'.size()", equalTo(1))
                .body("'errors'[2].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[2].'locations'[0].'column'", numberMatches(121.0))
                .body("'errors'[2].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
    }
    
    
    @Test
    public void test_13() throws Exception {
        
        given().accept("application/json")
                .contentType("application/json")
                .body(" { " + 
                    " \"query\": \" {  viewer  {mutationsAnalysis{drugResistance{mutationsByTypes{mutationType},commentsByTypes{mutationType}},mutationPrevalences{boundMutation{gene{nameWithStrain,strain{name},refSequence,consensus,drugClasses{name}},consensus,AAs,AAChars,insertedNAs,isInsertion,isDeletion,isDRM,isUnusual,isSDRM,comments{name,gene{nameWithStrain,name,refSequence,reference,length,drugClasses{name,drugs{displayAbbr}},MutationType},drugClass{drugs{name,displayAbbr,fullName}},highlightText},text,shortText},matched{AA,subtypes{AA,totalNaive,percentageNaive,totalTreated,frequencyTreated,percentageTreated}},others{subtypes{percentageNaive,percentageTreated}}}},patternAnalysis{validationResults{level},drugResistance{algorithm{strain{name}},commentsByTypes{comments{name,text}}},mutationPrevalences{boundMutation{gene{nameWithStrain,name,reference,consensus,length,MutationType},reference,AAs,AAChars,isInsertion,isDeletion,isAmbiguous,isApobecMutation,isUnsequenced,isDRM,hasStop,shortText},matched{AA},others{AA,subtypes{subtype{stats{totalTreated}},totalNaive,frequencyNaive,totalTreated}}},algorithmComparison{drugClass{drugs{name,displayAbbr}}}},genes{name,strain{name},refSequence,reference,drugClasses{fullName},MutationType},mutationPrevalenceSubtypes{name}}   }   \" " + 
                    " } ")
                .post(baseUrlOfSut)
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("application/json")
                .body("'errors'.size()", equalTo(3))
                .body("'errors'[0].'type'", containsString("ValidationError"))
                .body("'errors'[0].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'viewer/mutationsAnalysis/mutationPrevalences/boundMutation/comments/gene/MutationType'"))
                .body("'errors'[0].'locations'.size()", equalTo(1))
                .body("'errors'[0].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[0].'locations'[0].'column'", numberMatches(402.0))
                .body("'errors'[0].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[1].'type'", containsString("ValidationError"))
                .body("'errors'[1].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'viewer/patternAnalysis/mutationPrevalences/boundMutation/gene/MutationType'"))
                .body("'errors'[1].'locations'.size()", equalTo(1))
                .body("'errors'[1].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[1].'locations'[0].'column'", numberMatches(849.0))
                .body("'errors'[1].'locations'[0].'sourceName'", nullValue())
                .body("'errors'[2].'type'", containsString("ValidationError"))
                .body("'errors'[2].'message'", containsString("Validation error of type FieldUndefined: Field 'MutationType' in type 'Gene' is undefined @ 'viewer/genes/MutationType'"))
                .body("'errors'[2].'locations'.size()", equalTo(1))
                .body("'errors'[2].'locations'[0].'line'", numberMatches(1.0))
                .body("'errors'[2].'locations'[0].'column'", numberMatches(1203.0))
                .body("'errors'[2].'locations'[0].'sourceName'", nullValue())
                .body("'data'", nullValue());
    }


}
